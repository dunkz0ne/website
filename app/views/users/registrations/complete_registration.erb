<h2 class="mb-4">Complete your registration</h2>
<%= form_for @user, url: complete_registration_path, html: { class: 'needs-validation', novalidate: true } do |f| %>
  <div class="mb-3">
    <%= f.label :name, class: 'form-label' %>
    <%= f.text_field :name, class: 'form-control', required: true %>
    <div class="invalid-feedback">
      Please provide your name.
    </div>
  </div>

  <div class="mb-3">
    <%= f.label :bio, class: 'form-label' %>
    <%= f.text_area :bio, class: 'form-control', rows: 3 %>
  </div>

  <div class="mb-3">
    <%= f.label :team_id, class: 'form-label' %>
    <%= f.collection_select :team_id, Team.all, :id, :name, { prompt: "Select a team" }, { class: 'form-select', required: true } %>
    <div class="invalid-feedback">
      Please select a team.
    </div>
  </div>

  <div class="mb-3">
    <%= f.label :photo, class: 'form-label' %>
    <%= f.file_field :photo, class: 'form-control' %>
  </div>

  <div class="d-grid gap-2">
    <%= f.submit "Complete Registration", class: 'btn btn-primary' %>
  </div>
<% end %>

<script>
  // Example starter JavaScript for disabling form submissions if there are invalid fields
  (function () {
    'use strict'

    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    var forms = document.querySelectorAll('.needs-validation')

    // Loop over them and prevent submission
    Array.prototype.slice.call(forms)
      .forEach(function (form) {
        form.addEventListener('submit', function (event) {
          if (!form.checkValidity()) {
            event.preventDefault()
            event.stopPropagation()
          }

          form.classList.add('was-validated')
        }, false)
      })
  })()
</script>
